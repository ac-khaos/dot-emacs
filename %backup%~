
#user  nobody;
worker_processes  1;

events {
  worker_connections  1024;
}


http {
  include       mime.types;
  default_type  application/octet-stream;

  sendfile        on;

  keepalive_timeout  65;


  server {
    listen       80;
    server_name  www.hcsz088.com;

    location / {
	proxy_pass http://127.0.0.1:8181;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   html;
    }
  }

  server {
    listen       8080;
    server_name  localhost;

    location / {
      root   html;
      index  index.html index.htm;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   html;
    }
  }
  
  include servers/*;

  #配置RTMP状态一览HTTP页面
  server {
    listen 8900;

    location /rtmpLive {
      flv_live on;
      chunked_transfer_encoding  on; #open 'Transfer-Encoding: chunked' response
      add_header 'Access-Control-Allow-Credentials' 'true'; #add additional HTTP header
      add_header 'Access-Control-Allow-Origin' '*'; #add additional HTTP header
      add_header Access-Control-Allow-Headers X-Requested-With;
      add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
      add_header 'Cache-Control' 'no-cache';
    }
    
    location /stat {
      rtmp_stat all;
      rtmp_stat_stylesheet stat.xsl;
    }

    location /stat.xsl {
      root /Users/ancheng/nginx-http-flv-module/;
    }

    # HTTP协议访问直播流文件配置
    location /hls { #添加视频流存放地址。
      types {
        application/vnd.apple.mpegurl m3u8;
        video/mp2t ts;
      }
      #访问权限开启，否则访问这个地址会报403
      autoindex on;
      #视频流存放地址，与下面的hls_path相对应，这里root和alias的区别可自行百度
      alias /Users/ancheng/Laboratory/hls;
      expires -1;
      add_header Cache-Control no-cache;
      #防止跨域问题
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    }
  }
}

rtmp {
  server {
    listen 1935;
    chunk_size 4000;

    # 点播应用
    application vod {
      # 点播媒体存放目录
      play /Users/ancheng/Laboratory/flvs;
    }

    # rtmp直播
    application livetest {
      # enable live streaming
      live on;

      # record first 1K of stream
      record all;
      record_path /Users/ancheng/Laboratory/flvs;
      record_max_size 1K;

      # append current timestamp to each flv
      record_unique on;

      # publish only from localhost
      # allow publish 127.0.0.1;
      # deny publish all;

      # allow play all;
    }

    # Transcoding (ffmpeg needed)
    application big {
      live on;

      # On every pusblished stream run this command (ffmpeg)
      # with substitutions: $app/${app}, $name/${name} for application & stream name.
      #
      # This ffmpeg call receives stream from this application &
      # reduces the resolution down to 32x32. The stream is the published to
      # 'small' application (see below) under the same name.
      #
      # ffmpeg can do anything with the stream like video/audio
      # transcoding, resizing, altering container/codec params etc
      #
      # Multiple exec lines can be specified.
      
      exec sh /Users/ancheng/Laboratory/ffmpeg.sh;
    }

    application small {
      live on;
      # Video with reduced resolution comes here from ffmpeg
    }
    
    # hls直播
    application hls {
      live on;
      hls on;
      hls_path /Users/ancheng/Laboratory/hls; #视频流存放地址
      hls_fragment 5s;
      hls_playlist_length 15s;
      hls_continuous on; #连续模式。
      hls_cleanup on;    #对多余的切片进行删除。
      hls_nested on;     #嵌套模式。
    }
  }
}
